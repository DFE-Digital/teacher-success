name: Build and Deploy
concurrency: build_and_deploy_${{ github.ref_name }}

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Deploy environment"
        required: true
        type: choice
        default: review
        options:
        - review
        - staging
        - production
      docker-image-tag:
        description: "Docker image tag to deploy (optional)"
        required: true
        type: string
      pull-request-number:
        description: "Pull request number (required for review environment)"
        required: false
        type: string
  push:
   branches:
    - main
  pull_request:
    branches:
    - main
    types: [opened, reopened, synchronize, labeled]

env:
  TERRAFORM_BASE: terraform/application
  HEALTHCHECK_CMD: 'up'

jobs:
  build:
    name: Build
    if: ${{ github.event_name != 'workflow_dispatch' }}
    env:
      DOCKER_REPOSITORY: ghcr.io/dfe-digital/teacher-success
    outputs:
      docker-image-tag: ${{ steps.build-image.outputs.tag }}
    permissions:
      packages: write
      pull-requests: write
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v5
      name: Checkout

    - name: Build and push docker image
      id: build-image
      uses: DFE-Digital/github-actions/build-docker-image@master
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        context: .
        docker-repository: ${{ env.DOCKER_REPOSITORY }}
        max-cache: true
        reuse-cache: true
        snyk-token: ${{ secrets.SNYK_TOKEN }}

  deploy-review-app:
    name: Deployment To Review
    concurrency: deploy_review_${{ github.event.pull_request.number }}
    if: ${{ github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'deploy') }}
    needs: [build]
    environment:
      name: review
      url: ${{ steps.deploy_review.outputs.environment_url }}
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      pull-requests: write

    steps:
    - name: Deploy App to Review
      id: deploy_review
      uses: DFE-Digital/github-actions/deploy-to-aks@master
      with:
        azure-client-id: ${{ secrets.AZURE_CLIENT_ID }}
        azure-subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        azure-tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        environment: review
        pr-number: ${{ github.event.pull_request.number }}
        sha: ${{ needs.build.outputs.docker-image-tag }}
        terraform-base: ${{ env.TERRAFORM_BASE }}
        healthcheck: ${{ env.HEALTHCHECK_CMD }}
        db-seed: true
        smoke-test: false
        gcp-wip: projects/854365425353/locations/global/workloadIdentityPools/teacher-success/providers/teacher-success
        gcp-project-id: teacher-success

  deploy:
    name: Deploy environments
    if: ${{ github.ref == 'refs/heads/main' && github.event_name == 'push' }}
    environment:
      name: ${{ matrix.environment }}
      url: ${{ steps.deploy_app.outputs.environment_url }}
    needs: [build]
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      pull-requests: write
    strategy:
      max-parallel: 1
      matrix:
        environment: [staging, production]

    steps:
      - name: Deploy app to ${{ matrix.environment }}
        id: deploy_app
        uses: DFE-Digital/github-actions/deploy-to-aks@master
        with:
          azure-client-id: ${{ secrets.AZURE_CLIENT_ID }}
          azure-subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          azure-tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          environment: ${{ matrix.environment }}
          sha: ${{ needs.build.outputs.docker-image-tag }}
          terraform-base: ${{ env.TERRAFORM_BASE }}
          healthcheck: ${{ env.HEALTHCHECK_CMD }}
          slack-webhook: ${{ secrets.SLACK_WEBHOOK }}
          db-seed: false
          gcp-wip: projects/854365425353/locations/global/workloadIdentityPools/teacher-success/providers/teacher-success
          gcp-project-id: teacher-success

  manual_deploy:
    name: Manual deploy
    if: ${{ github.event_name == 'workflow_dispatch' }}
    environment:
      name: ${{ inputs.environment }}
      url: ${{ steps.deploy_manual.outputs.environment_url }}
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      pull-requests: write

    steps:
      - name: Deploy app to ${{ inputs.environment }}
        id: deploy_manual
        uses: DFE-Digital/github-actions/deploy-to-aks@master
        with:
          azure-client-id: ${{ secrets.AZURE_CLIENT_ID }}
          azure-subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          azure-tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          environment: ${{ inputs.environment }}
          pr-number: ${{ inputs.pull-request-number }}
          sha: ${{ inputs.docker-image-tag }}
          terraform-base: ${{ env.TERRAFORM_BASE }}
          healthcheck: ${{ env.HEALTHCHECK_CMD }}
          slack-webhook: ${{ secrets.SLACK_WEBHOOK }}
          db-seed: ${{ contains(fromJson('["review"]'), inputs.environment) && 'true' || 'false' }}
          gcp-wip: projects/854365425353/locations/global/workloadIdentityPools/teacher-success/providers/teacher-success
          gcp-project-id: teacher-success

  deploy_domains_infra:
    name: Deploy Domains Infrastructure
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    concurrency: deploy_domains_infra
    needs: [deploy]
    environment:
      name: production
    permissions:
      id-token: write

    steps:
      - name: Deploy Domains Infrastructure
        uses: DFE-Digital/github-actions/deploy-domains-infra@master
        with:
          azure-client-id: ${{ secrets.AZURE_CLIENT_ID  }}
          azure-tenant-id: ${{ secrets.AZURE_TENANT_ID   }}
          azure-subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID   }}
          slack-webhook: ${{ secrets.SLACK_WEBHOOK }}

  deploy_domains_env:
    name: Deploy Domains to ${{ matrix.domain_environment }} environment
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    concurrency: deploy_domains_${{ matrix.domain_environment }}
    needs: [deploy_domains_infra]
    strategy:
      max-parallel: 1
      matrix:
        domain_environment: [staging, production]
    environment:
      name: production
    permissions:
      id-token: write

    steps:
      - name: Deploy Domains Environment
        uses: DFE-Digital/github-actions/deploy-domains-env@master
        with:
          azure-client-id: ${{ secrets.AZURE_CLIENT_ID  }}
          azure-tenant-id: ${{ secrets.AZURE_TENANT_ID   }}
          azure-subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID   }}
          environment: ${{ matrix.domain_environment }}
          healthcheck: up
          slack-webhook: ${{ secrets.SLACK_WEBHOOK }}

  generate_sitemap:
    name: Generate Site Map
    runs-on: ubuntu-latest
    needs: deploy-review-app
    if: ${{ always() && needs.deploy-review-app.result == 'success'  }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Sitemap
        id: set-sitemap
        run: |
          echo "sitemap=$(bundle exec rails runner 'puts ContentLoader.new.pages.keys.to_json')" >> "$GITHUB_OUTPUT"

    outputs:
      sitemap_urls: ${{ steps.set-sitemap.outputs.sitemap }}

  lychee_link_check:
    name: Lychee Link Checking
    needs: generate_sitemap
    if: ${{ always() && needs.generate_sitemap.result == 'success' }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        site_url: ${{ fromJSON(needs.generate_sitemap.outputs.sitemap_urls) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      - name: Lychee link checker
        uses: lycheeverse/lychee-action@v2.5.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: "https://teach-pr-${{ github.event.pull_request.number }}.test.teacherservices.cloud/${{ matrix.site_url }}"
          fail: true
          failifEmpty: true
          debug: true
          output: lychee/results.md
